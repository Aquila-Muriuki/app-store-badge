{"version":3,"file":"throttle-async.js","sourceRoot":"","sources":["throttle-async.ts"],"names":[],"mappings":"AAAA,sEAAsE;AACtE,IAAI,UAAU,GAAG,KAAK,CAAC;AACvB,MAAM,UAAU,QAAQ,CAAsB,IAAmC,EAAE,KAAa;IAC5F,OAAO,KAAK,EAAE,GAAG,IAAO,EAAE,EAAE;QACxB,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,UAAU,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC;gBACD,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;YACxB,CAAC;oBAAS,CAAC;gBACP,UAAU,CAAC,GAAG,EAAE,CAAC,UAAU,GAAG,KAAK,EAAE,KAAK,CAAC,CAAC;YAChD,CAAC;QACL,CAAC;IACL,CAAC,CAAC;AACN,CAAC","sourcesContent":["// Helper function to throttle async tasks and avoid repeated requests\r\nlet inThrottle = false;\r\nexport function throttle<T extends unknown[]>(func: (...args: T) => Promise<void>, limit: number): (...args: T) => void {\r\n    return async (...args: T) => {\r\n        if (!inThrottle) {\r\n            inThrottle = true;\r\n            try {\r\n                await func(...args);\r\n            } finally {\r\n                setTimeout(() => inThrottle = false, limit);\r\n            }\r\n        }\r\n    };\r\n}"]}